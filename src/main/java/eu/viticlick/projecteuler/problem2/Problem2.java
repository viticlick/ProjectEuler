package eu.viticlick.projecteuler.problem2;

/**
 * 
 * @author viticlick
 *
 */
public class Problem2 {

    private int maxIndex = 4_000_000;

    public Problem2(int maxIndex){
        this.maxIndex = maxIndex;
    }
    
    public Problem2(){}
    
    public static void main(String[] args){
        Problem2 problem2 = new Problem2();
        System.out.println(problem2.result());
    }
    
    /**
     * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
     * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
     * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
     * 
     * @param naturalValue
     * @return By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms
     * @see <a href="https://projecteuler.net/problem=2">Project Euler</a>
     */
    public long result(){
        long result = 0L;
        int one = 1;
        
        result = result(one, one, result);
        
        return result;
    }
    
    private long result(int previus , int current , long carriage){
        if( current <= maxIndex){
            carriage = addEven(current, carriage);
            int next = previus + current;
            carriage = result( current , next , carriage);
        }
        return carriage;
    }

    private long addEven(int n, long carriage) {
        if( n % 2 == 0){
            carriage = carriage + n;
        }
        return carriage;
    }
    
}
